allprojects {
  apply plugin: 'idea'
  apply plugin: 'eclipse'
  apply plugin: 'java'
  apply plugin: 'checkstyle'
  repositories {
    mavenCentral()
  }

  checkstyle {
    configFile = new File(rootDir, "checkstyle/checkstyle.xml")
  }
  test.dependsOn('checkstyleMain', 'checkstyleTest')
}

project(':services') {
  dependencies {
    compile 'net.sourceforge.argparse4j:argparse4j:0.5.0'
    compile 'org.slf4j:slf4j-log4j12:1.7.6'
    compile 'org.apache.avro:avro:1.4.0'
    compile 'org.apache.kafka:kafka_2.11:0.9.0.1'
    compile 'org.apache.kafka:kafka-clients:0.9.0.1'
    compile 'org.testng:testng:6.8.8'
    compile 'org.eclipse.jetty:jetty-server:9.3.8.v20160314'
    compile 'org.json:json:20140107'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.1'
    compile 'junit:junit:4.6'
    compile 'org.jolokia:jolokia-jvm:1.3.3'

    testCompile 'junit:junit:4.6'
  }

  tasks.create(name: "copyDependantLibs", type: Copy) {
    from (configurations.testRuntime) {
      include('slf4j-log4j12*')
    }
    from (configurations.runtime) {
    }
    into "build/dependant-libs"
    duplicatesStrategy 'exclude'
  }

  jar {
    dependsOn 'copyDependantLibs'
  }

  task testJar(type: Jar) {
    classifier = 'test'
    from sourceSets.test.output
  }

  test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
    }
  }

  artifacts {
    archives testJar
  }
}

project(':tests') {
  dependencies {
    compile project(':services')
  }
}

project(':core') {
  dependencies {
    compile project(':tests')
  }
}

task wrapper(type: Wrapper) {
   gradleVersion = '2.11'
}
