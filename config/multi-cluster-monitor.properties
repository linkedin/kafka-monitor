# Copyright 2016 LinkedIn Corp. Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
# file except in compliance with the License. You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
# an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# This properties file specifies an example configure to monitor a pipeline of Kafka clusters.
# User probably needs to change zookeeper.connect and bootstrap.servers to point to respective clusters.
# More clusters can be added in the map for "topic.management.config.per.cluster" to reference
# each cluster in the pipeline. The "produce.service.props" should use the first cluster and
# the "consume.service.props" should use the last cluster in the pipeline.

# Produce service: Configure Produce Service to produce to the first cluster of the pipeline
# Consume service: Configure Consume Service to consume from the last cluster of the pipeline
# Last cluster: If there are more than two clusters in the pipeline, add one property map for each one of them.
{
  "multi-cluster-monitor": {
    "class.name": "com.linkedin.kmf.apps.MultiClusterMonitor",
    "topic": "kafka-monitor-topic",
    "produce.service.props": {
      "zookeeper.connect": "localhost:2181/first_cluster",
      "bootstrap.servers": "localhost:9092",
      "produce.record.delay.ms": 100,
      "produce.producer.props": {
        "client.id": "kafka-monitor-client-id"
      }
    },
    "consume.service.props": {
      "zookeeper.connect": "localhost:2181/last_cluster",
      "bootstrap.servers": "localhost:9095",
      "consume.latency.sla.ms": "20000",
      "consume.consumer.props": {
        "group.id": "kafka-monitor-group-id"
      }
    },

    "topic.management.props.per.cluster" : {
      "first-cluster" : {
        "bootstrap.servers": "localhost:9092",
        "zookeeper.connect": "localhost:2181/first_cluster",
        "topic-management.topicCreationEnabled": true,
        "topic-management.replicationFactor" : 1,
        "topic-management.partitionsToBrokersRatio" : 2.0,
        "topic-management.rebalance.interval.ms" : 600000,
        "topic-management.topicFactory.props": {
        }
      },

      "last-cluster" : {
        "bootstrap.servers": "localhost:9095",
        "zookeeper.connect": "localhost:2181/last_cluster",
        "topic-management.topicCreationEnabled": true,
        "topic-management.replicationFactor" : 1,
        "topic-management.partitionsToBrokersRatio" : 2.0,
        "topic-management.rebalance.interval.ms" : 600000,
        "topic-management.topicFactory.props": {
        }
      }
    }

  },

  "reporter-service": {
    "class.name": "com.linkedin.kmf.services.DefaultMetricsReporterService",
    "report.interval.sec": 1,
    "report.metrics.list": [
      "kmf.services:type=produce-service,name=*:produce-availability-avg",
      "kmf.services:type=consume-service,name=*:consume-availability-avg",
      "kmf.services:type=produce-service,name=*:records-produced-total",
      "kmf.services:type=consume-service,name=*:records-consumed-total",
      "kmf.services:type=consume-service,name=*:records-lost-total",
      "kmf.services:type=consume-service,name=*:records-lost-rate",
      "kmf.services:type=consume-service,name=*:records-duplicated-total",
      "kmf.services:type=consume-service,name=*:records-delay-ms-avg",
      "kmf.services:type=produce-service,name=*:records-produced-rate",
      "kmf.services:type=produce-service,name=*:produce-error-rate",
      "kmf.services:type=consume-service,name=*:consume-error-rate",
      "kmf.services:type=commit-availability-service,name=*:offsets-committed-avg",
      "kmf.services:type=commit-availability-service,name=*:commit-latency-avg",
      "kmf.services:type=commit-availability-service,name=*:commit-availability-avg",
      "kmf.services:type=commit-availability-service,name=*:failed-commit-offsets-avg",
      "kmf.services:type=commit-availability-service,name=*:offsets-committed-total",
      "kmf.services:type=commit-availability-service,name=*:failed-commit-offsets-total"
    ]
  },

  "jolokia-service": {
    "class.name": "com.linkedin.kmf.services.JolokiaService"
  }
}
