version: 2
jobs:
  build:

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps:
    #      todo

#      - checkout # check out the code in the project directory
      - run: echo "Kafka Monitor CircleCI"

#
#version: 2 # use CircleCI 2.0
#jobs: # a collection of steps
#  build: # runs not using Workflows must have a `build` job as entry point
#
#    working_directory: ~/circleci-demo-java-spring # directory where steps will run
#
#
#
#    steps: # a collection of executable commands
#
#      - checkout # check out source code to working directory
#
#      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
#          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
#          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
#
#      - run: mvn dependency:go-offline # gets the project dependencies
#
#      - save_cache: # saves the project dependencies
#          paths:
#            - ~/.m2
#          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
#
#      - run: mvn package # run the actual tests
#
#      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
#          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
#          path: target/surefire-reports
#
#      - store_artifacts: # store the uberjar as an artifact
#          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
#          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar
#      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples